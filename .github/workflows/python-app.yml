# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python application

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  format_checking:
    name: Check Python Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check files using the black formatter
        uses: rickstaa/action-black@v1
        id: action_black
        with:
          black_args: "."
      - name: Annotate diff changes using reviewdog
        if: steps.action_black.outputs.is_formatted == 'true'
        uses: reviewdog/action-suggester@v1
        with:
          tool_name: blackfmt
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Ubuntu packages
      run: |
         sudo apt install -y python3-pip python3-cffi python3-brotli libpango-1.0-0 libharfbuzz0b libpangoft2-1.0-0
         #sudo apt install -y w3c-linkchecker 
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest weasyprint
        if [ -f python/requirements.txt ]; then pip install -r python/requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # E203: Spaces around colons in array indexing collides with black-formatting
        # E402: Imports always on top collide with the need to set the python module search path in some places
        # W503: Collides with black formatting
        flake8 . --count --max-complexity=10 --max-line-length=200 --statistics --ignore=E203,E402,W503
    - name: Test
      run: |
        mkdir test_output
        cd test_output
        python3 ../testing/test.py
        python3 ../testing/test_cpp_symbols.py
    - name: HTML check
      run: |
        pwd
        cd test_output
        tree
        cd /home/runner/work/elf_diff/elf_diff/test_output
        tree
    - name: Link Checker
      uses: lycheeverse/lychee-action@v1.0.8
      id: lychee
      with:
        args: --verbose --no-progress "/github/workspace/test_output/**/*.html"
      env:
        GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
    - name: Fail on Link Checker Errors
      run: exit ${{ steps.lychee.outputs.exit_code }}

